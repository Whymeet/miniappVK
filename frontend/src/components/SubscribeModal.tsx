import { useEffect, useState } from 'react';
import {
  ModalRoot,
  ModalPage,
  ModalPageHeader,
  Button,
} from '@vkontakte/vkui';
import { Icon56NotificationOutline } from '@vkontakte/icons';
import bridge from '@vkontakte/vk-bridge';
import { useAllowMessages, useSubscriptionStatus } from '@/hooks/useSubscription';

interface SubscribeModalProps {
  groupId: string | null;
  userId: string | null;
  launchParams?: Record<string, any>;
  onClose: () => void;
}

export default function SubscribeModal({ groupId, userId, launchParams, onClose }: SubscribeModalProps) {
  const [activeModal, setActiveModal] = useState<string | null>('subscribe');
  const [isLoading, setIsLoading] = useState(false);
  const allowMessagesMutation = useAllowMessages();
  const { data: subscriptionStatus } = useSubscriptionStatus(userId, launchParams);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–∂–µ –ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  useEffect(() => {
    if (subscriptionStatus?.data?.allowed_from_group) {
      // –ï—Å–ª–∏ —É–∂–µ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã - –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
      setActiveModal(null);
      onClose();
    }
  }, [subscriptionStatus, onClose]);

  const handleSubscribe = async () => {
    console.log('handleSubscribe called', { groupId, userId, launchParams });
    
    if (!userId || !launchParams) {
      console.error('Missing required params:', { 
        hasGroupId: !!groupId, 
        hasUserId: !!userId, 
        hasLaunchParams: !!launchParams 
      });
      return;
    }

    setIsLoading(true);

    try {
      // –ï—Å–ª–∏ –µ—Å—Ç—å groupId - –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç –≥—Ä—É–ø–ø—ã
      if (groupId) {
        console.log('Requesting VK permission for group:', groupId);
        
        const result = await bridge.send('VKWebAppAllowMessagesFromGroup', {
          group_id: parseInt(groupId),
        });

        console.log('VK permission result:', result);

        if (result.result) {
          console.log('Saving to backend...');
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
          await allowMessagesMutation.mutateAsync(
            { launchParams, groupId },
          );

          console.log('Saved successfully!');
        }
      } else {
        // –ï—Å–ª–∏ –Ω–µ—Ç groupId - –ø—Ä–æ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –±–µ–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        console.log('No groupId, saving subscription without notifications...');
        
        await allowMessagesMutation.mutateAsync(
          { launchParams, groupId: '218513564' }, // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –Ω–∞—à–µ–π –≥—Ä—É–ø–ø—ã
        );

        console.log('Subscription saved!');
      }
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
      setActiveModal(null);
      onClose();
    } catch (error) {
      console.error('Failed to allow messages:', error);
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É –¥–∞–∂–µ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–∞–∑–∞–ª
      setActiveModal(null);
      onClose();
    } finally {
      setIsLoading(false);
    }
  };

  const handleSkip = () => {
    setActiveModal(null);
    onClose();
  };

  return (
    <ModalRoot activeModal={activeModal} onClose={handleSkip}>
      <ModalPage
        id="subscribe"
        onClose={handleSkip}
        header={
          <ModalPageHeader>
            <div style={{ 
              textAlign: 'center', 
              fontSize: '18px', 
              fontWeight: '600',
              color: 'var(--text-primary)'
            }}>
              üéâ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
            </div>
          </ModalPageHeader>
        }
      >
        <div style={{ 
          padding: '32px 24px',
          minHeight: '400px',
          display: 'flex',
          flexDirection: 'column',
          justifyContent: 'center',
          alignItems: 'center',
          textAlign: 'center',
          background: 'linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%)',
          borderRadius: '12px',
          margin: '16px'
        }}>
          {/* –ò–∫–æ–Ω–∫–∞ */}
          <div style={{
            width: '80px',
            height: '80px',
            borderRadius: '50%',
            background: 'linear-gradient(135deg, #007bff 0%, #0056b3 100%)',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            marginBottom: '24px',
            boxShadow: '0 8px 24px rgba(0, 123, 255, 0.3)'
          }}>
            <Icon56NotificationOutline style={{ 
              color: 'white',
              fontSize: '40px'
            }} />
          </div>
          
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <h2 style={{
            fontSize: '24px',
            fontWeight: '700',
            color: 'var(--text-primary)',
            margin: '0 0 12px 0',
            lineHeight: '1.2'
          }}>
            –≠–ö–°–ö–õ–Æ–ó–ò–í–ù–û–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï
          </h2>
          
          {/* –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <div style={{
            fontSize: '20px',
            fontWeight: '600',
            color: '#007bff',
            marginBottom: '16px',
            background: 'linear-gradient(135deg, #007bff 0%, #0056b3 100%)',
            WebkitBackgroundClip: 'text',
            WebkitTextFillColor: 'transparent',
            backgroundClip: 'text'
          }}>
            –ü–æ–ª—É—á–∏—Ç–µ –∑–∞–π–º –ø–æ–¥ 0%
          </div>
          
          {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
          <p style={{
            fontSize: '16px',
            color: 'var(--text-secondary)',
            lineHeight: '1.5',
            margin: '0 0 32px 0',
            maxWidth: '320px'
          }}>
            {groupId 
              ? '–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, —á—Ç–æ–±—ã –ø–µ—Ä–≤—ã–º–∏ —É–∑–Ω–∞–≤–∞—Ç—å –æ –Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö –∏ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö'
              : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ –Ω–∞—à–µ–º —Å–µ—Ä–≤–∏—Å–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ª—É—á—à–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º –ø–æ –∑–∞–π–º–∞–º'
            }
          </p>
          
          {/* –ö–Ω–æ–ø–∫–∏ */}
          <div style={{ width: '100%', maxWidth: '280px' }}>
            <Button
              size="l"
              stretched
              mode="primary"
              onClick={handleSubscribe}
              loading={isLoading}
              style={{ 
                marginBottom: '16px',
                background: 'linear-gradient(135deg, #007bff 0%, #0056b3 100%)',
                border: 'none',
                fontSize: '16px',
                fontWeight: '600',
                height: '48px',
                borderRadius: '12px',
                boxShadow: '0 4px 16px rgba(0, 123, 255, 0.3)'
              }}
            >
              {groupId ? 'üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –∏ –ø–æ–ª—É—á–∏—Ç—å –∑–∞–π–º' : '‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –ø–æ–ª—É—á–∏—Ç—å –∑–∞–π–º'}
            </Button>
            
            <Button
              size="l"
              stretched
              mode="tertiary"
              onClick={handleSkip}
              disabled={isLoading}
              style={{
                fontSize: '14px',
                color: 'var(--text-secondary)',
                height: '40px',
                borderRadius: '8px'
              }}
            >
              –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
            </Button>
          </div>
        </div>
      </ModalPage>
    </ModalRoot>
  );
}

