import { useEffect, useState } from 'react';
import {
  ModalRoot,
  ModalPage,
  ModalPageHeader,
  Button,
  Title,
  Text,
  Div,
  Spacing,
} from '@vkontakte/vkui';
import { Icon56NotificationOutline } from '@vkontakte/icons';
import bridge from '@vkontakte/vk-bridge';
import { useAllowMessages, useSubscriptionStatus } from '@/hooks/useSubscription';

interface SubscribeModalProps {
  groupId: string | null;
  userId: string | null;
  launchParams?: Record<string, any>;
  onClose: () => void;
}

export default function SubscribeModal({ groupId, userId, launchParams, onClose }: SubscribeModalProps) {
  const [activeModal, setActiveModal] = useState<string | null>('subscribe');
  const [isLoading, setIsLoading] = useState(false);
  const allowMessagesMutation = useAllowMessages();
  const { data: subscriptionStatus } = useSubscriptionStatus(userId, launchParams);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–∂–µ –ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  useEffect(() => {
    if (subscriptionStatus?.data?.allowed_from_group) {
      // –ï—Å–ª–∏ —É–∂–µ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã - –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
      setActiveModal(null);
      onClose();
    }
  }, [subscriptionStatus, onClose]);

  const handleSubscribe = async () => {
    console.log('handleSubscribe called', { groupId, userId, launchParams });
    
    if (!userId || !launchParams) {
      console.error('Missing required params:', { 
        hasGroupId: !!groupId, 
        hasUserId: !!userId, 
        hasLaunchParams: !!launchParams 
      });
      return;
    }

    setIsLoading(true);

    try {
      // –ï—Å–ª–∏ –µ—Å—Ç—å groupId - –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç –≥—Ä—É–ø–ø—ã
      if (groupId) {
        console.log('Requesting VK permission for group:', groupId);
        
        const result = await bridge.send('VKWebAppAllowMessagesFromGroup', {
          group_id: parseInt(groupId),
        });

        console.log('VK permission result:', result);

        if (result.result) {
          console.log('Saving to backend...');
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
          await allowMessagesMutation.mutateAsync(
            { launchParams, groupId },
          );

          console.log('Saved successfully!');
        }
      } else {
        // –ï—Å–ª–∏ –Ω–µ—Ç groupId - –ø—Ä–æ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –±–µ–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        console.log('No groupId, saving subscription without notifications...');
        
        await allowMessagesMutation.mutateAsync(
          { launchParams, groupId: '218513564' }, // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –Ω–∞—à–µ–π –≥—Ä—É–ø–ø—ã
        );

        console.log('Subscription saved!');
      }
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
      setActiveModal(null);
      onClose();
    } catch (error) {
      console.error('Failed to allow messages:', error);
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É –¥–∞–∂–µ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–∞–∑–∞–ª
      setActiveModal(null);
      onClose();
    } finally {
      setIsLoading(false);
    }
  };

  const handleSkip = () => {
    setActiveModal(null);
    onClose();
  };

  return (
    <ModalRoot activeModal={activeModal} onClose={handleSkip}>
      <ModalPage
        id="subscribe"
        onClose={handleSkip}
        header={
          <ModalPageHeader>
            –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
          </ModalPageHeader>
        }
      >
        <Div style={{ 
          display: 'flex', 
          flexDirection: 'column', 
          alignItems: 'center',
          textAlign: 'center',
          padding: '24px'
        }}>
          <Icon56NotificationOutline style={{ color: 'var(--accent)' }} />
          
          <Spacing size={16} />
          
          <Title level="2" weight="2">
            –≠–ö–°–ö–õ–Æ–ó–ò–í–ù–û–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï
          </Title>
          
          <Spacing size={12} />
          
          <Text style={{ 
            fontSize: '18px',
            fontWeight: 600,
            color: 'var(--accent)'
          }}>
            –ü–æ–ª—É—á–∏—Ç–µ –∑–∞–π–º –ø–æ–¥ 0%
          </Text>
          
          <Spacing size={8} />
          
          <Text style={{ 
            fontSize: '15px',
            color: 'var(--text-secondary)',
            lineHeight: '1.5'
          }}>
            {groupId 
              ? '–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, —á—Ç–æ–±—ã –ø–µ—Ä–≤—ã–º–∏ —É–∑–Ω–∞–≤–∞—Ç—å –æ –Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö –∏ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö'
              : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ –Ω–∞—à–µ–º —Å–µ—Ä–≤–∏—Å–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ª—É—á—à–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º –ø–æ –∑–∞–π–º–∞–º'
            }
          </Text>
          
          <Spacing size={24} />
          
          <Button
            size="l"
            stretched
            mode="primary"
            onClick={handleSubscribe}
            loading={isLoading}
            style={{ 
              marginBottom: '12px',
              background: 'var(--button-primary-background)',
              fontSize: '16px',
              fontWeight: 600
            }}
          >
            {groupId ? 'üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –∏ –ø–æ–ª—É—á–∏—Ç—å –∑–∞–π–º' : '‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –ø–æ–ª—É—á–∏—Ç—å –∑–∞–π–º'}
          </Button>
          
          <Button
            size="l"
            stretched
            mode="tertiary"
            onClick={handleSkip}
            disabled={isLoading}
          >
            –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
          </Button>
        </Div>
      </ModalPage>
    </ModalRoot>
  );
}

