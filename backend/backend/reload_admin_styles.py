#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∏–ª–µ–π –∞–¥–º–∏–Ω–∫–∏ Django
"""

import os
import sys
from pathlib import Path

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å
GREEN = '\033[92m'
YELLOW = '\033[93m'
RED = '\033[91m'
BLUE = '\033[94m'
RESET = '\033[0m'

def check_file(path, description):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞"""
    if path.exists():
        print(f"{GREEN}‚úì{RESET} {description}: {path}")
        return True
    else:
        print(f"{RED}‚úó{RESET} {description}: {RED}–ù–ï –ù–ê–ô–î–ï–ù{RESET} - {path}")
        return False

def main():
    print(f"\n{BLUE}{'='*60}{RESET}")
    print(f"{BLUE}  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª–µ–π –∞–¥–º–∏–Ω–∫–∏ Django{RESET}")
    print(f"{BLUE}{'='*60}{RESET}\n")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–∞–∑–æ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    base_dir = Path(__file__).resolve().parent
    app_dir = base_dir / 'app'
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã
    checks = [
        (app_dir / 'static' / 'admin' / 'css' / 'custom_admin.css', 
         '–ü–æ–ª–Ω—ã–µ —Å—Ç–∏–ª–∏ –∞–¥–º–∏–Ω–∫–∏'),
        (app_dir / 'static' / 'admin' / 'css' / 'color-config.css', 
         '–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–æ–≤'),
        (app_dir / 'templates' / 'admin' / 'base_site.html', 
         '–®–∞–±–ª–æ–Ω –∞–¥–º–∏–Ω–∫–∏'),
    ]
    
    all_ok = True
    for path, desc in checks:
        if not check_file(path, desc):
            all_ok = False
    
    print()
    
    if all_ok:
        print(f"{GREEN}{'='*60}{RESET}")
        print(f"{GREEN}  ‚úì –í—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ!{RESET}")
        print(f"{GREEN}{'='*60}{RESET}\n")
        
        print(f"{YELLOW}üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:{RESET}\n")
        print(f"1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print(f"   {BLUE}{app_dir / 'static' / 'admin' / 'css' / 'color-config.css'}{RESET}\n")
        
        print(f"2. –ò–∑–º–µ–Ω–∏—Ç–µ —Ü–≤–µ—Ç–∞ –≤ –±–ª–æ–∫–µ :root\n")
        
        print(f"3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Django —Å–µ—Ä–≤–µ—Ä:")
        print(f"   {BLUE}docker-compose restart backend{RESET}")
        print(f"   –∏–ª–∏")
        print(f"   {BLUE}python manage.py runserver{RESET}\n")
        
        print(f"4. –û–±–Ω–æ–≤–∏—Ç–µ –±—Ä–∞—É–∑–µ—Ä: {BLUE}Ctrl+Shift+R{RESET}\n")
        
        print(f"{YELLOW}üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:{RESET}")
        print(f"   ‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: {base_dir / 'QUICK_COLOR_CHANGE.md'}")
        print(f"   ‚Ä¢ –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: {base_dir / 'ADMIN_COLORS.md'}\n")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Ü–≤–µ—Ç–∞
        color_config_path = app_dir / 'static' / 'admin' / 'css' / 'color-config.css'
        try:
            with open(color_config_path, 'r', encoding='utf-8') as f:
                content = f.read()
                if '--main-color:' in content:
                    print(f"{YELLOW}üé® –¢–µ–∫—É—â–∏–µ —Ü–≤–µ—Ç–∞:{RESET}")
                    for line in content.split('\n'):
                        if '--main-color' in line or '--accent-color' in line or '--link-color' in line:
                            if not line.strip().startswith('/*'):
                                print(f"   {line.strip()}")
        except Exception as e:
            pass
        
    else:
        print(f"{RED}{'='*60}{RESET}")
        print(f"{RED}  ‚úó –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!{RESET}")
        print(f"{RED}{'='*60}{RESET}\n")
        print(f"{YELLOW}–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤.{RESET}\n")
    
    print()

if __name__ == '__main__':
    main()

